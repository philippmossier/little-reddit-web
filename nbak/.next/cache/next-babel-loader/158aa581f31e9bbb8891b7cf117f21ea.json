{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/gh/lireddit/little-reddit-web/src/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'urql';\nimport * as styles from '../page-styles/styles';\nimport { toErrorMap } from '../utils/toErrorMap';\n\nvar Register = function Register() {\n  _s();\n\n  var _useMutation = useMutation(REGISTER_MUT),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      registerMut = _useMutation2[1]; // without code-generated customHook\n  // const [, registerMut] = useRegisterMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _response$data, _response$data2;\n\n      var response, errorObj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return registerMut(data);\n\n            case 2:\n              response = _context.sent;\n              // if no connection\n              if (!response) console.log('Promise unresolved, check connection');\n              if (response.error) console.log('Error occured in onSubmit:', response.error); // set error message on form inputField\n\n              if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors) {\n                console.log(toErrorMap(response.data.register.errors));\n                errorObj = toErrorMap(response.data.register.errors);\n                if ('username' in errorObj) setError('username', {\n                  message: errorObj.username\n                });\n                if ('password' in errorObj) setError('password', {\n                  message: errorObj.password\n                });\n              } // successfull registered\n\n\n              if (response && !response.error && !((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.register.errors) && response.data) console.log('Successfull registered:', response.data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    className: styles.usernameLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"username\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), errors.username && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 35\n    }\n  }, errors.username.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.passwordLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 35\n    }\n  }, errors.password.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Sign in\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))));\n};\n\n_s(Register, \"Ku9pa95kduYGCVMq3lVk8a1Nq+E=\", false, function () {\n  return [useMutation, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/phil/gh/lireddit/little-reddit-web/src/pages/register.tsx"],"names":["React","useForm","useMutation","styles","toErrorMap","Register","REGISTER_MUT","registerMut","register","handleSubmit","formState","setError","errors","isSubmitting","onSubmit","data","response","console","log","error","errorObj","message","username","password","container","headerContainer","headerLogo","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","passwordLabel","passwordInputContainer","passwordInputField","submitButton"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CombinedError, useMutation } from 'urql';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport { toErrorMap } from '../utils/toErrorMap';\n\ntype FormValues = {\n  username: string;\n  password: string;\n};\n\nconst Register: FC = (): ReactElement => {\n  const [, registerMut] = useMutation(REGISTER_MUT); // without code-generated customHook\n  // const [, registerMut] = useRegisterMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await registerMut(data);\n\n    // if no connection\n    if (!response) console.log('Promise unresolved, check connection');\n    if (response.error) console.log('Error occured in onSubmit:', response.error);\n\n    // set error message on form inputField\n    if (response.data?.register.errors) {\n      console.log(toErrorMap(response.data.register.errors));\n      const errorObj = toErrorMap(response.data.register.errors);\n      if ('username' in errorObj) setError('username', { message: errorObj.username });\n      if ('password' in errorObj) setError('password', { message: errorObj.password });\n    }\n\n    // successfull registered\n    if (response && !response.error && !response.data?.register.errors && response.data)\n      console.log('Successfull registered:', response.data);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Sign in to your account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"username\" className={styles.usernameLabel}>\n              Username\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input name=\"username\" ref={register({ required: true })} className={styles.usernameInputField} />\n              {errors.username && <div className=\"text-red-500 font-bold text-sm\">{errors.username.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <label htmlFor=\"password\" className={styles.passwordLabel}>\n              Password\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.password && <div className=\"text-red-500 font-bold text-sm\">{errors.password.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}