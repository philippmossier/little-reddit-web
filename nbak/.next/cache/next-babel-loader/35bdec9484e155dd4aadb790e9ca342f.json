{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/pages/forgot-password.tsx\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\n\nconst ForgotPasswordPage = ({}) => {\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  const [, forgotPasswordMut] = useForgotPasswordMutation();\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const router = useRouter();\n\n  const onSubmit = async data => {\n    var _response$data;\n\n    const response = await forgotPasswordMut(data);\n\n    if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.forgotPassword) {\n      setComplete(true);\n      console.log('Email sent sucessfull:', response.data);\n      router.push('/');\n    } // if no connection\n    else if (!response) console.log('Promise unresolved, check connection'); // error handling:\n      else if (response.error) {\n          setError('email', {\n            message: 'sending email failed, pls check spelling'\n          });\n        }\n  };\n\n  return complete ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"email sent. Please check your inbox\")) : __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Reset password\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-4 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"email\"), __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    className: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 32\n    }\n  }, errors.email.message))), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"forgot password\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"forgot password\")))));\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(ForgotPasswordPage);","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/pages/forgot-password.tsx"],"names":["useRouter","React","useState","useForm","useForgotPasswordMutation","styles","ForgotPasswordPage","complete","setComplete","forgotPasswordMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","response","forgotPassword","console","log","push","error","message","container","headerContainer","headerLogo","headerTitle","formContainer","label","inputContainer","required","inputField","email","submitButton","withUrqlClient","createUrqlClient","ssr"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/dist/client/router';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\n\nconst ForgotPasswordPage: React.FC<{}> = ({}) => {\n  const [complete, setComplete] = useState(false);\n  const [, forgotPasswordMut] = useForgotPasswordMutation();\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n  const onSubmit = async (data) => {\n    const response = await forgotPasswordMut(data);\n    if (response.data?.forgotPassword) {\n      setComplete(true);\n      console.log('Email sent sucessfull:', response.data);\n      router.push('/');\n    }\n    // if no connection\n    else if (!response) console.log('Promise unresolved, check connection');\n    // error handling:\n    else if (response.error) {\n      setError('email', { message: 'sending email failed, pls check spelling' });\n    }\n  };\n\n  return complete ? (\n    <div>\n      <p>email sent. Please check your inbox</p>\n    </div>\n  ) : (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Reset password</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"mt-4 mb-2\">\n            <label htmlFor=\"email\" className={styles.label}>\n              email\n            </label>\n            <div className={styles.inputContainer}>\n              <input name=\"email\" ref={register({ required: true })} className={styles.inputField} />\n              {errors.email && <div className=\"text-sm font-bold text-red-500\">{errors.email.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-4\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(ForgotPasswordPage);\n"]},"metadata":{},"sourceType":"module"}