{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/gh/lireddit/little-reddit-web/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'urql';\nimport * as styles from '../page-styles/styles';\nvar REGISTER_MUT = \"\\nmutation Register($username: String !, $password: String! ) {\\n  register (options: {username: $username, password: $password }){\\n    errors{\\n      field\\n      message\\n    } \\n    user {\\n      id\\n      username\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n\";\n\nvar Register = function Register() {\n  _s();\n\n  var _useMutation = useMutation(REGISTER_MUT),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      registerMut = _useMutation2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      formState = _useForm.formState,\n      reset = _useForm.reset;\n  /*eslint no-unused-vars: \"warn\"*/\n\n\n  var isDirty = formState.isDirty,\n      isSubmitting = formState.isSubmitting,\n      touched = formState.touched,\n      submitCount = formState.submitCount,\n      isSubmitted = formState.isSubmitted;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return registerMut(data);\n\n            case 2:\n              result = _context.sent;\n              if (!result) console.log('No response from registerMutation');\n              if (result && !result.error && !result.data.register.errors) console.log('Successfull registered:', data);\n              if (result.error) console.log('Error occured in onSubmit:', result);\n              if (result.data.register.errors) console.log('register error', result.data.register.errors);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var disabled = false;\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    className: styles.usernameLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"username\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), errors.username && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 35\n    }\n  }, \"Please enter a username adress\"))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.passwordLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }\n  }, \"Please enter a password\"))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: disabled,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Sign in\") : __jsx(\"button\", {\n    type: \"submit\",\n    disabled: disabled,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))));\n};\n\n_s(Register, \"t+BPbTDmeWzWalPow8vvQkgV/G4=\", false, function () {\n  return [useMutation, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/phil/gh/lireddit/little-reddit-web/pages/register.tsx"],"names":["React","useForm","useMutation","styles","REGISTER_MUT","Register","registerMut","register","handleSubmit","errors","formState","reset","isDirty","isSubmitting","touched","submitCount","isSubmitted","onSubmit","data","result","console","log","error","disabled","container","headerContainer","headerLogo","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","username","passwordLabel","passwordInputContainer","passwordInputField","password","submitButton"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { OperationContext, OperationResult, useMutation } from 'urql';\nimport * as styles from '../page-styles/styles';\n\ntype FormValues = {\n  username: string;\n  password: string;\n};\n\nconst REGISTER_MUT = `\nmutation Register($username: String !, $password: String! ) {\n  register (options: {username: $username, password: $password }){\n    errors{\n      field\n      message\n    } \n    user {\n      id\n      username\n      createdAt\n      updatedAt\n    }\n  }\n}\n`;\n\nconst Register = (): ReactElement => {\n  const [, registerMut] = useMutation(REGISTER_MUT);\n  const { register, handleSubmit, errors, formState, reset } = useForm<FormValues>();\n  /*eslint no-unused-vars: \"warn\"*/\n  const { isDirty, isSubmitting, touched, submitCount, isSubmitted } = formState;\n  const onSubmit = async (data: FormValues) => {\n    const result = await registerMut(data);\n    if (!result) console.log('No response from registerMutation');\n    if (result && !result.error && !result.data.register.errors) console.log('Successfull registered:', data);\n    if (result.error) console.log('Error occured in onSubmit:', result);\n    if (result.data.register.errors) console.log('register error', result.data.register.errors);\n  };\n  const disabled = false;\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Sign in to your account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"username\" className={styles.usernameLabel}>\n              Username\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input name=\"username\" ref={register({ required: true })} className={styles.usernameInputField} />\n              {errors.username && <div className=\"text-red-500 font-bold text-sm\">Please enter a username adress</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <label htmlFor=\"password\" className={styles.passwordLabel}>\n              Password\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.password && <div className=\"text-red-500 font-bold text-sm\">Please enter a password</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={disabled} className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            ) : (\n              <button type=\"submit\" disabled={disabled} className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}