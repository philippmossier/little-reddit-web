{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/components/Navbar/Navbar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\nimport { isServer } from '../../utils/isServer';\nimport { useRouter } from 'next/router';\n\nvar NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  React.useEffect(function () {\n    console.log('Component was mounted.');\n  }, []);\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    // only load query in browser (because cookie only works in browser and so we dont waste a request which we dont need)\n    // Note: This gives browser Warning: Did not expect server HTML to contain...\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var router = useRouter();\n  console.log(data);\n  var body; // data is loading\n\n  if (fetching) {\n    body = null; // user not logged in\n  } else {\n    var _data$me;\n\n    body = __jsx(React.Fragment, null, __jsx(\"a\", {\n      className: \"mx-2 text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, data === null || data === void 0 ? void 0 : (_data$me = data.me) === null || _data$me === void 0 ? void 0 : _data$me.username), __jsx(\"button\", {\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return logout();\n\n              case 2:\n                router.reload();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      disabled: logoutFetching,\n      className: \"mx-2 text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  }\n\n  return __jsx(\"nav\", {\n    className: \"bg-gray-800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex items-center h-16\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"ml-auto mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, body)));\n};\n\n_s(NavBar, \"PKJJ9Sjde+qcs8Een4Z4qhsel5k=\", false, function () {\n  return [useLogoutMutation, useMeQuery, useRouter];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/components/Navbar/Navbar.tsx"],"names":["React","useLogoutMutation","useMeQuery","isServer","useRouter","NavBar","useEffect","console","log","logoutFetching","fetching","logout","pause","data","router","body","me","username","reload"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,yBAA9C;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAIA,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAC5CL,EAAAA,KAAK,CAACM,SAAN,CAAgB,YAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,GAFD,EAEG,EAFH;;AAD4C,2BAIGP,iBAAiB,EAJpB;AAAA;AAAA,MAIzBQ,cAJyB,0BAInCC,QAJmC;AAAA,MAIPC,MAJO;;AAAA,oBAKfT,UAAU,CAAC;AACtC;AACA;AACAU,IAAAA,KAAK,EAAET,QAAQ;AAHuB,GAAD,CALK;AAAA;AAAA;AAAA,MAKnCU,IALmC,iBAKnCA,IALmC;AAAA,MAK7BH,QAL6B,iBAK7BA,QAL6B;;AAU5C,MAAMI,MAAM,GAAGV,SAAS,EAAxB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,MAAIE,IAAJ,CAb4C,CAc5C;;AACA,MAAIL,QAAJ,EAAc;AACZK,IAAAA,IAAI,GAAG,IAAP,CADY,CAEZ;AACD,GAHD,MAGO;AAAA;;AACLA,IAAAA,IAAI,GACF,4BACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,IAAhC,aAAgCA,IAAhC,mCAAgCA,IAAI,CAAEG,EAAtC,6CAAgC,SAAUC,QAA1C,CADF,EAEE;AACE,MAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACDN,MAAM,EADL;;AAAA;AAEPG,gBAAAA,MAAM,CAACI,MAAP;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF,EADT;AAKE,MAAA,QAAQ,EAAET,cALZ;AAME,MAAA,SAAS,EAAC,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAeD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BM,IAA/B,CADF,CADF,CADF;AAOD,CA3CD;;GAAMV,M;UAI2CJ,iB,EAClBC,U,EAKdE,S;;;KAVXC,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport NextLink from 'next/link';\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\nimport { isServer } from '../../utils/isServer';\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/router';\n\ntype NavBarProps = unknown;\n\nconst NavBar: React.FC<NavBarProps> = ({}) => {\n  React.useEffect(() => {\n    console.log('Component was mounted.');\n  }, []);\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({\n    // only load query in browser (because cookie only works in browser and so we dont waste a request which we dont need)\n    // Note: This gives browser Warning: Did not expect server HTML to contain...\n    pause: isServer(),\n  });\n  const router = useRouter();\n\n  console.log(data);\n  let body;\n  // data is loading\n  if (fetching) {\n    body = null;\n    // user not logged in\n  } else {\n    body = (\n      <>\n        <a className=\"mx-2 text-white\">{data?.me?.username}</a>\n        <button\n          onClick={async () => {\n            await logout();\n            router.reload();\n          }}\n          disabled={logoutFetching}\n          className=\"mx-2 text-white\"\n        >\n          Logout\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <nav className=\"bg-gray-800\">\n      <div className=\"flex items-center h-16\">\n        <div className=\"ml-auto mr-2\">{body}</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}