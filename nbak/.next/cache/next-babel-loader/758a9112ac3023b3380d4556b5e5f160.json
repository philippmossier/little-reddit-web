{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport NextLink from 'next/link';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useLoginMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport { toErrorMap } from '../utils/toErrorMap';\n\nconst Login = () => {\n  const [, loginMut] = useLoginMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const router = useRouter();\n\n  const onSubmit = async data => {\n    var _response$data, _response$data2;\n\n    const response = await loginMut(data); // success:\n\n    if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.user) {\n      console.log('Login succesfully as:', response.data.login.user);\n      router.push('/');\n    } // if no connection:\n    else if (!response) console.log('Promise unresolved, check connection'); // error handling:\n      else if (response.error) console.log('Error occured in onSubmit:', response.error);else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.errors) {\n          console.log(toErrorMap(response.data.login.errors));\n          const errorObj = toErrorMap(response.data.login.errors);\n          if ('usernameOrEmail' in errorObj) setError('usernameOrEmail', {\n            message: errorObj.usernameOrEmail\n          });\n          if ('password' in errorObj) setError('password', {\n            message: errorObj.password\n          });\n        }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"usernameOrEmail\",\n    className: styles.usernameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Username or Email\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"usernameOrEmail\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), errors.usernameOrEmail && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, errors.usernameOrEmail.message))), __jsx(\"div\", {\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.passwordLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 35\n    }\n  }, errors.password.message))), __jsx(NextLink, {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"justify-endhover:text-black hover:border-black flex text-sm tracking-tighter text-gray-600 border-b border-gray-300 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\")), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Sign in\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))));\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: false\n})(Login);","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/login.tsx"],"names":["withUrqlClient","useRouter","NextLink","React","useForm","useLoginMutation","styles","createUrqlClient","toErrorMap","Login","loginMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","response","login","user","console","log","push","error","errorObj","message","usernameOrEmail","password","container","headerContainer","headerLogo","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","passwordLabel","passwordInputContainer","passwordInputField","submitButton","ssr"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport NextLink from 'next/link';\nimport React, { FC, ReactElement } from 'react';\nimport { useForm } from 'react-hook-form';\nimport ExternalLinkSvg from '../assets/svg/ExternalLinkSvg';\nimport { useLoginMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport { toErrorMap } from '../utils/toErrorMap';\n\ntype FormValues = {\n  usernameOrEmail: string;\n  password: string;\n};\n\nconst Login: FC<FormValues> = (): ReactElement => {\n  const [, loginMut] = useLoginMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await loginMut(data);\n    // success:\n    if (response.data?.login.user) {\n      console.log('Login succesfully as:', response.data.login.user);\n      router.push('/');\n    }\n    // if no connection:\n    else if (!response) console.log('Promise unresolved, check connection');\n    // error handling:\n    else if (response.error) console.log('Error occured in onSubmit:', response.error);\n    else if (response.data?.login.errors) {\n      console.log(toErrorMap(response.data.login.errors));\n      const errorObj = toErrorMap(response.data.login.errors);\n      if ('usernameOrEmail' in errorObj) setError('usernameOrEmail', { message: errorObj.usernameOrEmail });\n      if ('password' in errorObj) setError('password', { message: errorObj.password });\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Sign in to your account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"usernameOrEmail\" className={styles.usernameLabel}>\n              Username or Email\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input name=\"usernameOrEmail\" ref={register({ required: true })} className={styles.usernameInputField} />\n              {errors.usernameOrEmail && (\n                <div className=\"text-sm font-bold text-red-500\">{errors.usernameOrEmail.message}</div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"my-4\">\n            <label htmlFor=\"password\" className={styles.passwordLabel}>\n              Password\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.password && <div className=\"text-sm font-bold text-red-500\">{errors.password.message}</div>}\n            </div>\n          </div>\n\n          <NextLink href=\"/forgot-password\">\n            <span className=\"justify-endhover:text-black hover:border-black flex text-sm tracking-tighter text-gray-600 border-b border-gray-300 cursor-pointer\">\n              Forgot Password?\n            </span>\n          </NextLink>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: false })(Login);\n"]},"metadata":{},"sourceType":"module"}