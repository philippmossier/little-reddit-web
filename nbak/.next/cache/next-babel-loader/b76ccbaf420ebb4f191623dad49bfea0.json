{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/pages/forgot-password.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport NextLink from 'next/link';\n\nvar ForgotPasswordPage = function ForgotPasswordPage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useForgotPasswordMut = useForgotPasswordMutation(),\n      _useForgotPasswordMut2 = _slicedToArray(_useForgotPasswordMut, 2),\n      forgotPasswordMut = _useForgotPasswordMut2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n  var router = useRouter();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _response$data;\n\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return forgotPasswordMut(data);\n\n            case 2:\n              response = _context.sent;\n\n              if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.forgotPassword) {\n                setComplete(true);\n                console.log('Email sent sucessfull:', response.data);\n              } // if no connection\n              else if (!response) console.log('Promise unresolved, check connection'); // error handling:\n                else if (response.error) {\n                    setError('email', {\n                      message: 'sending email failed, pls check spelling'\n                    });\n                  }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return complete ? __jsx(\"div\", {\n    className: \"flex min-h-screen bg-blue-300\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"sm:rounded-lg h-1/4 w-1/2 m-24 bg-white shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"sm:p-6 px-4 py-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"text-lg font-medium leading-6 text-gray-900\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Continuous Integration\"), __jsx(\"div\", {\n    className: \"max-w-xl mt-2 text-sm text-gray-500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"If an account with that email exists, we sent you an email to reset your password.\")), __jsx(NextLink, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-3 text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"hover:text-indigo-500 font-medium text-indigo-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, ' ', \"Go back to Home \", __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, \"\\u2192\"))))))) : __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Reset password\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-4 mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"email\"), __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    className: styles.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 32\n    }\n  }, errors.email.message))), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"forgot password\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"forgot password\")))));\n};\n\n_s(ForgotPasswordPage, \"O5AmFt31+YU3nt+CUgB8J2pGSmg=\", false, function () {\n  return [useForgotPasswordMutation, useForm, useRouter];\n});\n\n_c = ForgotPasswordPage;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: false\n})(ForgotPasswordPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/pages/forgot-password.tsx"],"names":["withUrqlClient","useRouter","React","useState","useForm","useForgotPasswordMutation","styles","createUrqlClient","NextLink","ForgotPasswordPage","complete","setComplete","forgotPasswordMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","response","forgotPassword","console","log","error","message","container","headerContainer","headerLogo","headerTitle","formContainer","label","inputContainer","required","inputField","email","submitButton","ssr"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport NextLink from 'next/link';\n\nconst ForgotPasswordPage: React.FC<{}> = ({}) => {\n  const [complete, setComplete] = useState(false);\n  const [, forgotPasswordMut] = useForgotPasswordMutation();\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n  const onSubmit = async (data) => {\n    const response = await forgotPasswordMut(data);\n    if (response.data?.forgotPassword) {\n      setComplete(true);\n      console.log('Email sent sucessfull:', response.data);\n    }\n    // if no connection\n    else if (!response) console.log('Promise unresolved, check connection');\n    // error handling:\n    else if (response.error) {\n      setError('email', { message: 'sending email failed, pls check spelling' });\n    }\n  };\n\n  return complete ? (\n    <div className=\"flex min-h-screen bg-blue-300\">\n      <div className=\"sm:rounded-lg h-1/4 w-1/2 m-24 bg-white shadow\">\n        <div className=\"sm:p-6 px-4 py-5\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Continuous Integration</h3>\n          <div className=\"max-w-xl mt-2 text-sm text-gray-500\">\n            <p>If an account with that email exists, we sent you an email to reset your password.</p>\n          </div>\n          <NextLink href=\"/\">\n            <div className=\"mt-3 text-sm\">\n              <a href=\"#\" className=\"hover:text-indigo-500 font-medium text-indigo-600\">\n                {' '}\n                Go back to Home <span aria-hidden=\"true\">&rarr;</span>\n              </a>\n            </div>\n          </NextLink>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Reset password</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"mt-4 mb-2\">\n            <label htmlFor=\"email\" className={styles.label}>\n              email\n            </label>\n            <div className={styles.inputContainer}>\n              <input name=\"email\" ref={register({ required: true })} className={styles.inputField} />\n              {errors.email && <div className=\"text-sm font-bold text-red-500\">{errors.email.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-4\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: false })(ForgotPasswordPage);\n"]},"metadata":{},"sourceType":"module"}