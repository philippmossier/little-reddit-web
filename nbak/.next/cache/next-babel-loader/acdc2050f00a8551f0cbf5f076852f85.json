{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport { toErrorMap } from '../utils/toErrorMap';\n\nvar Register = function Register() {\n  _s();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      registerMut = _useRegisterMutation2[1]; // mutation hook from '@graphql-codegen/typescript-urql'\n\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n  var router = useRouter();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _response$data, _response$data2;\n\n      var response, errorObj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return registerMut({\n                options: data\n              });\n\n            case 2:\n              response = _context.sent;\n              // if no connection\n              if (!response) console.log('Promise unresolved, check connection');\n              if (response.error) console.log('Error occured in onSubmit:', response.error);\n\n              if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors) {\n                console.log(toErrorMap(response.data.register.errors));\n                errorObj = toErrorMap(response.data.register.errors);\n                if ('username' in errorObj) setError('username', {\n                  message: errorObj.username\n                });\n                if ('email' in errorObj) setError('email', {\n                  message: errorObj.email\n                });\n                if ('password' in errorObj) setError('password', {\n                  message: errorObj.password\n                });\n              } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.register.user) {\n                console.log('Successfull registered:', response.data);\n                router.push('/');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Register a account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    className: styles.usernameLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"username\",\n    ref: register({\n      required: false\n    }),\n    className: \"focus:shadow-outline placeholder-gray-400 block px-3 py-2 w-full border focus:border-blue-300 border-gray-300 rounded-md focus:outline-none appearance-none transition duration-150 ease-in-out sm:text-sm sm:leading-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), errors.username && __jsx(\"div\", {\n    className: \"text-red-500 text-sm font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 35\n    }\n  }, errors.username.message))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.usernameLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: false\n    }),\n    className: styles.usernameInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"div\", {\n    className: \"text-red-500 text-sm font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 32\n    }\n  }, errors.email.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.passwordLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"div\", {\n    className: \"text-red-500 text-sm font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 35\n    }\n  }, errors.password.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Register\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Register\")))));\n};\n\n_s(Register, \"LS6AqEWjoTfwZlR4Y0sdIMzaUBA=\", false, function () {\n  return [useRegisterMutation, useForm, useRouter];\n});\n\n_c = Register;\nexport default withUrqlClient(createUrqlClient)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/register.tsx"],"names":["withUrqlClient","useRouter","React","useForm","useRegisterMutation","styles","createUrqlClient","toErrorMap","Register","registerMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","options","response","console","log","error","errorObj","message","username","email","password","user","push","container","headerContainer","headerLogo","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","passwordLabel","passwordInputContainer","passwordInputField","submitButton"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { FC, ReactElement } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport { toErrorMap } from '../utils/toErrorMap';\n\ntype FormValues = {\n  username: string;\n  email: string;\n  password: string;\n};\n\nconst Register: FC<FormValues> = (): ReactElement => {\n  const [, registerMut] = useRegisterMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await registerMut({ options: data });\n    // if no connection\n    if (!response) console.log('Promise unresolved, check connection');\n    if (response.error) console.log('Error occured in onSubmit:', response.error);\n\n    if (response.data?.register.errors) {\n      console.log(toErrorMap(response.data.register.errors));\n      const errorObj = toErrorMap(response.data.register.errors);\n      if ('username' in errorObj) setError('username', { message: errorObj.username });\n      if ('email' in errorObj) setError('email', { message: errorObj.email });\n      if ('password' in errorObj) setError('password', { message: errorObj.password });\n    } else if (response.data?.register.user) {\n      console.log('Successfull registered:', response.data);\n      router.push('/');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Register a account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"username\" className={styles.usernameLabel}>\n              Username\n            </label>\n            <div className={styles.usernameInputContainer}>\n              {/* <input name=\"username\" ref={register({ required: false })} className={styles.usernameInputField} /> */}\n              <input\n                name=\"username\"\n                ref={register({ required: false })}\n                className=\"focus:shadow-outline placeholder-gray-400 block px-3 py-2 w-full border focus:border-blue-300 border-gray-300 rounded-md focus:outline-none appearance-none transition duration-150 ease-in-out sm:text-sm sm:leading-5\"\n              />\n              {errors.username && <div className=\"text-red-500 text-sm font-bold\">{errors.username.message}</div>}\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"email\" className={styles.usernameLabel}>\n              Email\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input name=\"email\" ref={register({ required: false })} className={styles.usernameInputField} />\n              {errors.email && <div className=\"text-red-500 text-sm font-bold\">{errors.email.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <label htmlFor=\"password\" className={styles.passwordLabel}>\n              Password\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.password && <div className=\"text-red-500 text-sm font-bold\">{errors.password.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Register\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Register\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(Register);\n"]},"metadata":{},"sourceType":"module"}