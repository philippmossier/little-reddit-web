{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/gh/lireddit/little-reddit-web/src/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nvar REGISTER_MUT = \"\\nmutation Register($username: String !, $password: String! ) {\\n  register (options: {username: $username, password: $password }){\\n    errors{\\n      field\\n      message\\n    } \\n    user {\\n      id\\n      username\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n\";\n\nvar Register = function Register() {\n  _s();\n\n  // const [, registerMut] = useMutation(REGISTER_MUT); // without code-generated customHook\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      registerMut = _useRegisterMutation2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _response$data, _response$data2, _response$data2$regis, _response$data2$regis2;\n\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return registerMut(data);\n\n            case 2:\n              response = _context.sent;\n              if (!response) console.log('No response from registerMutation. Cant get access to ResponseObject, check connection');\n              if (response && !response.error && !((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors)) console.log('Successfull registered:', response.data);\n              if (response.error) console.log('Error occured in onSubmit:', response.error); // if (response.data?.register.errors) console.log('register error', response.data.register.errors);\n\n              if (((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$regis = _response$data2.register) === null || _response$data2$regis === void 0 ? void 0 : (_response$data2$regis2 = _response$data2$regis.errors) === null || _response$data2$regis2 === void 0 ? void 0 : _response$data2$regis2[0].field) === 'username') setError('username', {\n                message: response.data.register.errors[0].message\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    className: styles.usernameLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    // onChange={() => {\n    //   setError('username', {\n    //     type: 'manual',\n    //     message: 'Dont Forget Your Username Should Be Cool!',\n    //   });\n    // }}\n    name: \"username\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), errors.username && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 35\n    }\n  }, errors.username.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.passwordLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 35\n    }\n  }, \"Please enter a password\"))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Sign in\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))));\n};\n\n_s(Register, \"TIH2uXVEVglRvNjAbTr6FP90a5g=\", false, function () {\n  return [useRegisterMutation, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/phil/gh/lireddit/little-reddit-web/src/pages/register.tsx"],"names":["React","useForm","useRegisterMutation","styles","REGISTER_MUT","Register","registerMut","register","handleSubmit","formState","setError","errors","isSubmitting","onSubmit","data","response","console","log","error","field","message","container","headerContainer","headerLogo","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","username","passwordLabel","passwordInputContainer","passwordInputField","password","submitButton"],"mappings":"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","sourcesContent":["import { error } from 'console';\nimport React, { FC, ReactElement } from 'react';\nimport { appendErrors, useForm } from 'react-hook-form';\nimport { CombinedError, useMutation } from 'urql';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\n\ntype FormValues = {\n  username: string;\n  password: string;\n};\n\ntype ResponseObject = {\n  data?: {\n    register: {\n      errors?: [\n        {\n          field: string;\n          message: string;\n        },\n      ];\n      user?: {\n        id: number;\n        username: string;\n        updatedAt: string;\n        createdAt: string;\n      };\n    };\n  };\n  error?: CombinedError;\n};\n\nconst REGISTER_MUT = `\nmutation Register($username: String !, $password: String! ) {\n  register (options: {username: $username, password: $password }){\n    errors{\n      field\n      message\n    } \n    user {\n      id\n      username\n      createdAt\n      updatedAt\n    }\n  }\n}\n`;\n\nconst Register: FC = (): ReactElement => {\n  // const [, registerMut] = useMutation(REGISTER_MUT); // without code-generated customHook\n  const [, registerMut] = useRegisterMutation();\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await registerMut(data);\n    if (!response)\n      console.log('No response from registerMutation. Cant get access to ResponseObject, check connection');\n    if (response && !response.error && !response.data?.register.errors)\n      console.log('Successfull registered:', response.data);\n    if (response.error) console.log('Error occured in onSubmit:', response.error);\n    // if (response.data?.register.errors) console.log('register error', response.data.register.errors);\n    if (response.data?.register?.errors?.[0].field === 'username')\n      setError('username', {\n        message: response.data.register.errors[0].message,\n      });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Sign in to your account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"username\" className={styles.usernameLabel}>\n              Username\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input\n                // onChange={() => {\n                //   setError('username', {\n                //     type: 'manual',\n                //     message: 'Dont Forget Your Username Should Be Cool!',\n                //   });\n                // }}\n                name=\"username\"\n                ref={register({ required: true })}\n                className={styles.usernameInputField}\n              />\n              {errors.username && <div className=\"text-red-500 font-bold text-sm\">{errors.username.message}</div>}\n              {/* {errors.username && <div className=\"text-red-500 font-bold text-sm\">Please enter a username adress</div>} */}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <label htmlFor=\"password\" className={styles.passwordLabel}>\n              Password\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.password && <div className=\"text-red-500 font-bold text-sm\">Please enter a password</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}