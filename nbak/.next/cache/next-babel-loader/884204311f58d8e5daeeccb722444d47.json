{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/register.tsx\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport { toErrorMap } from '../utils/toErrorMap';\n\nconst Register = () => {\n  const [, registerMut] = useRegisterMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const router = useRouter();\n\n  const onSubmit = async data => {\n    var _response$data, _response$data2;\n\n    const response = await registerMut({\n      options: data\n    }); // success:\n\n    if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.user) {\n      console.log('Successfull registered:', response.data);\n      router.push('/');\n    } // if no connection\n    else if (!response) console.log('Promise unresolved, check connection'); // error handling:\n      else if (response.error) console.log('Error occured in onSubmit:', response.error);else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.register.errors) {\n          console.log(toErrorMap(response.data.register.errors));\n          const errorObj = toErrorMap(response.data.register.errors);\n          if ('username' in errorObj) setError('username', {\n            message: errorObj.username\n          });\n          if ('email' in errorObj) setError('email', {\n            message: errorObj.email\n          });\n          if ('password' in errorObj) setError('password', {\n            message: errorObj.password\n          });\n        }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Register a account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"username\",\n    ref: register({\n      required: false\n    }),\n    className: \"focus:shadow-outline focus:border-blue-300 focus:outline-none sm:text-sm sm:leading-5 block w-full px-3 py-2 placeholder-gray-400 transition duration-150 ease-in-out border border-gray-300 rounded-md appearance-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), errors.username && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 35\n    }\n  }, errors.username.message))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: false\n    }),\n    className: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 32\n    }\n  }, errors.email.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), errors.password && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 35\n    }\n  }, errors.password.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Register\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Register\")))));\n};\n\nexport default withUrqlClient(createUrqlClient)(Register);","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/register.tsx"],"names":["withUrqlClient","useRouter","React","useForm","useRegisterMutation","styles","createUrqlClient","toErrorMap","Register","registerMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","response","options","user","console","log","push","error","errorObj","message","username","email","password","container","headerContainer","headerLogo","headerTitle","formContainer","label","inputContainer","required","inputField","submitButton"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { FC, ReactElement } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport { toErrorMap } from '../utils/toErrorMap';\n\ntype FormValues = {\n  username: string;\n  email: string;\n  password: string;\n};\n\nconst Register: FC<FormValues> = (): ReactElement => {\n  const [, registerMut] = useRegisterMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await registerMut({ options: data });\n    // success:\n    if (response.data?.register.user) {\n      console.log('Successfull registered:', response.data);\n      router.push('/');\n    }\n    // if no connection\n    else if (!response) console.log('Promise unresolved, check connection');\n    // error handling:\n    else if (response.error) console.log('Error occured in onSubmit:', response.error);\n    else if (response.data?.register.errors) {\n      console.log(toErrorMap(response.data.register.errors));\n      const errorObj = toErrorMap(response.data.register.errors);\n      if ('username' in errorObj) setError('username', { message: errorObj.username });\n      if ('email' in errorObj) setError('email', { message: errorObj.email });\n      if ('password' in errorObj) setError('password', { message: errorObj.password });\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Register a account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"username\" className={styles.label}>\n              Username\n            </label>\n            <div className={styles.inputContainer}>\n              {/* <input name=\"username\" ref={register({ required: false })} className={styles.usernameInputField} /> */}\n              <input\n                name=\"username\"\n                ref={register({ required: false })}\n                className=\"focus:shadow-outline focus:border-blue-300 focus:outline-none sm:text-sm sm:leading-5 block w-full px-3 py-2 placeholder-gray-400 transition duration-150 ease-in-out border border-gray-300 rounded-md appearance-none\"\n              />\n              {errors.username && <div className=\"text-sm font-bold text-red-500\">{errors.username.message}</div>}\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"email\" className={styles.label}>\n              Email\n            </label>\n            <div className={styles.inputContainer}>\n              <input name=\"email\" ref={register({ required: false })} className={styles.inputField} />\n              {errors.email && <div className=\"text-sm font-bold text-red-500\">{errors.email.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <label htmlFor=\"password\" className={styles.label}>\n              Password\n            </label>\n            <div className={styles.inputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.inputField} />\n              {errors.password && <div className=\"text-sm font-bold text-red-500\">{errors.password.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Register\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Register\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(Register);\n"]},"metadata":{},"sourceType":"module"}