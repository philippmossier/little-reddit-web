{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport React, { useState } from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\nimport createUrqlClient from '../../utils/createUrqlClient';\n\n// interface ChangePasswordProps {}\nvar ChangePassword = function ChangePassword(_ref) {\n  _s();\n\n  var token = _ref.token;\n\n  var _useChangePasswordMut = useChangePasswordMutation(),\n      _useChangePasswordMut2 = _slicedToArray(_useChangePasswordMut, 2),\n      changePasswordMut = _useChangePasswordMut2[1]; // mutation hook from '@graphql-codegen/typescript-urql'\n\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n  var router = useRouter();\n  console.log('token:', token); // token has no form field and no state, so we create a state for it:\n\n  var _useState = useState(''),\n      tokenError = _useState[0],\n      setTokenError = _useState[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _response$data, _response$data2;\n\n      var response, errorObj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // const response = await changePasswordMut(data);\n              console.log('onSubmit-data:', data);\n              _context.next = 3;\n              return changePasswordMut({\n                newPassword: data.newPassword,\n                token: token\n              });\n\n            case 3:\n              response = _context.sent;\n              // if no connection\n              if (!response) console.log('Promise unresolved, check connection');\n              if (response.error) console.log('Error occured in onSubmit:', response.error);\n\n              if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n                console.log(toErrorMap(response.data.changePassword.errors));\n                errorObj = toErrorMap(response.data.changePassword.errors);\n                if ('newPassword' in errorObj) setError('newPassword', {\n                  message: errorObj.changePassword\n                });\n                if ('token' in errorObj) setError('newPassword', {\n                  message: errorObj.changePassword\n                });\n              } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n                console.log('Changed password succesfully as:', response.data.changePassword.user);\n                router.push('/');\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    className: \"w-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\",\n    clipRule: \"evenodd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Enter your new password\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"newPassword\",\n    className: styles.usernameLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"New password\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"newPassword\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), errors.newPassword && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }\n  }, errors.newPassword.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Submit\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n}; // special function which gets all query params\n\n\n_s(ChangePassword, \"a8z5ql61NHGMpYFWFd6moEpcLjI=\", false, function () {\n  return [useChangePasswordMutation, useForm, useRouter];\n});\n\n_c = ChangePassword;\n\nChangePassword.getInitialProps = function (_ref3) {\n  var query = _ref3.query;\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx"],"names":["withUrqlClient","React","useState","styles","toErrorMap","useChangePasswordMutation","useRouter","useForm","createUrqlClient","ChangePassword","token","changePasswordMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","console","log","tokenError","setTokenError","onSubmit","data","newPassword","response","error","changePassword","errorObj","message","user","push","container","headerContainer","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","submitButton","getInitialProps","query"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { NextPage } from 'next';\nimport React, { useState } from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\nimport createUrqlClient from '../../utils/createUrqlClient';\n\ntype FormValues = {\n  newPassword: string;\n  token: string;\n};\n\n// interface ChangePasswordProps {}\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const [, changePasswordMut] = useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n  console.log('token:', token);\n  // token has no form field and no state, so we create a state for it:\n  const [tokenError, setTokenError] = useState('');\n\n  const onSubmit = async (data: FormValues) => {\n    // const response = await changePasswordMut(data);\n    console.log('onSubmit-data:', data);\n    const response = await changePasswordMut({\n      newPassword: data.newPassword,\n      token,\n    });\n\n    // if no connection\n    if (!response) console.log('Promise unresolved, check connection');\n    if (response.error) console.log('Error occured in onSubmit:', response.error);\n    if (response.data?.changePassword.errors) {\n      console.log(toErrorMap(response.data.changePassword.errors));\n      const errorObj = toErrorMap(response.data.changePassword.errors);\n      if ('newPassword' in errorObj) setError('newPassword', { message: errorObj.changePassword });\n      if ('token' in errorObj) setError('newPassword', { message: errorObj.changePassword });\n    } else if (response.data?.changePassword.user) {\n      console.log('Changed password succesfully as:', response.data.changePassword.user);\n      router.push('/');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-12\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n        <h2 className={styles.headerTitle}>Enter your new password</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"newPassword\" className={styles.usernameLabel}>\n              New password\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input\n                name=\"newPassword\"\n                type=\"password\"\n                ref={register({ required: true })}\n                className={styles.usernameInputField}\n              />\n              {errors.newPassword && <div className=\"text-red-500 font-bold text-sm\">{errors.newPassword.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n// special function which gets all query params\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}