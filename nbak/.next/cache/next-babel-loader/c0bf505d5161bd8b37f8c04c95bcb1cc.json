{"ast":null,"code":"var _jsxFileName = \"/home/phil/gh/lireddit/little-reddit-web/src/pages/register.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nconst REGISTER_MUT = `\nmutation Register($username: String !, $password: String! ) {\n  register (options: {username: $username, password: $password }){\n    errors{\n      field\n      message\n    } \n    user {\n      id\n      username\n      createdAt\n      updatedAt\n    }\n  }\n}\n`;\n\nconst Register = () => {\n  // const [, registerMut] = useMutation(REGISTER_MUT); // without code-generated customHook\n  const [, registerMut] = useRegisterMutation();\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n\n  const onSubmit = async data => {\n    var _response$data;\n\n    const response = await registerMut(data); // if (!response)\n    //   console.log('No response from registerMutation. Cant get access to ResponseObject, check connection');\n    // if (response && !response.error && !response.data?.register.errors)\n    //   console.log('Successfull registered:', response.data);\n    // if (response.error) console.log('Error occured in onSubmit:', response.error);\n    // // if (response.data?.register.errors) console.log('register error', response.data.register.errors);\n\n    if (!((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors)) setError('username', {\n      message: 'problem with username'\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"username\",\n    className: styles.usernameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Username\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    // onChange={() => {\n    //   setError('username', {\n    //     type: 'manual',\n    //     message: 'Dont Forget Your Username Should Be Cool!',\n    //   });\n    // }}\n    name: \"username\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), errors.username && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 35\n    }\n  }, errors.username.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.passwordLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Sign in\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/phil/gh/lireddit/little-reddit-web/src/pages/register.tsx"],"names":["React","useForm","useRegisterMutation","styles","REGISTER_MUT","Register","registerMut","register","handleSubmit","formState","setError","errors","isSubmitting","onSubmit","data","response","message","container","headerContainer","headerLogo","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","username","passwordLabel","passwordInputContainer","passwordInputField","submitButton"],"mappings":"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","sourcesContent":["import { error } from 'console';\nimport React, { FC, ReactElement } from 'react';\nimport { appendErrors, useForm } from 'react-hook-form';\nimport { CombinedError, useMutation } from 'urql';\nimport { useRegisterMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\n\ntype FormValues = {\n  username: string;\n  password: string;\n};\n\ntype ResponseObject = {\n  data?: {\n    register: {\n      errors?: [\n        {\n          field: string;\n          message: string;\n        },\n      ];\n      user?: {\n        id: number;\n        username: string;\n        updatedAt: string;\n        createdAt: string;\n      };\n    };\n  };\n  error?: CombinedError;\n};\n\nconst REGISTER_MUT = `\nmutation Register($username: String !, $password: String! ) {\n  register (options: {username: $username, password: $password }){\n    errors{\n      field\n      message\n    } \n    user {\n      id\n      username\n      createdAt\n      updatedAt\n    }\n  }\n}\n`;\n\nconst Register: FC = (): ReactElement => {\n  // const [, registerMut] = useMutation(REGISTER_MUT); // without code-generated customHook\n  const [, registerMut] = useRegisterMutation();\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await registerMut(data);\n    // if (!response)\n    //   console.log('No response from registerMutation. Cant get access to ResponseObject, check connection');\n    // if (response && !response.error && !response.data?.register.errors)\n    //   console.log('Successfull registered:', response.data);\n    // if (response.error) console.log('Error occured in onSubmit:', response.error);\n    // // if (response.data?.register.errors) console.log('register error', response.data.register.errors);\n    if (!response.data?.register.errors)\n      setError('username', {\n        message: 'problem with username',\n      });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Sign in to your account</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"username\" className={styles.usernameLabel}>\n              Username\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input\n                // onChange={() => {\n                //   setError('username', {\n                //     type: 'manual',\n                //     message: 'Dont Forget Your Username Should Be Cool!',\n                //   });\n                // }}\n                name=\"username\"\n                ref={register({ required: true })}\n                className={styles.usernameInputField}\n              />\n              {errors.username && <div className=\"text-red-500 font-bold text-sm\">{errors.username.message}</div>}\n              {/* {errors.username && <div className=\"text-red-500 font-bold text-sm\">Please enter a username adress</div>} */}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <label htmlFor=\"password\" className={styles.passwordLabel}>\n              Password\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"password\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {/* {errors.password && <div className=\"text-red-500 font-bold text-sm\">Please enter a password</div>} */}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Sign in\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}