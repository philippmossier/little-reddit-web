{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/forgot-password.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as styles from '../page-styles/styles';\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n      loginMut = _useLoginMutation2[1]; // mutation hook from '@graphql-codegen/typescript-urql'\n\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n  var router = useRouter();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('a'); //   const response = await loginMut(data);\n              //   // success:\n              //   if (response.data?.login.user) {\n              //     console.log('Login succesfully as:', response.data.login.user);\n              //     router.push('/');\n              //   }\n              //   // if no connection:\n              //   else if (!response) console.log('Promise unresolved, check connection');\n              //   // error handling:\n              //   else if (response.error) console.log('Error occured in onSubmit:', response.error);\n              //   else if (response.data?.login.errors) {\n              //     console.log(toErrorMap(response.data.login.errors));\n              //     const errorObj = toErrorMap(response.data.login.errors);\n              //     if ('usernameOrEmail' in errorObj) setError('usernameOrEmail', { message: errorObj.usernameOrEmail });\n              //     if ('password' in errorObj) setError('password', { message: errorObj.password });\n              //   }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Email\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-4 mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.passwordLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"email\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }\n  }, errors.email.message))), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"forgot password\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"forgot password\")))));\n};\n\n_s(ForgotPassword, \"8lV6hWTnlzBMbGY8vv6gXyf1TW4=\", true);\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/forgot-password.tsx"],"names":["React","styles","ForgotPassword","useLoginMutation","loginMut","useForm","register","handleSubmit","formState","setError","errors","isSubmitting","router","useRouter","onSubmit","data","console","log","container","headerContainer","headerLogo","headerTitle","formContainer","passwordLabel","passwordInputContainer","required","passwordInputField","email","message","submitButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as styles from '../page-styles/styles';\n\ntype FormValues = {\n  email: string;\n};\n\nconst ForgotPassword: React.FC<{}> = ({}) => {\n  const [, loginMut] = useLoginMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n  const onSubmit = async (data: FormValues) => {\n    console.log('a');\n    //   const response = await loginMut(data);\n    //   // success:\n    //   if (response.data?.login.user) {\n    //     console.log('Login succesfully as:', response.data.login.user);\n    //     router.push('/');\n    //   }\n    //   // if no connection:\n    //   else if (!response) console.log('Promise unresolved, check connection');\n    //   // error handling:\n    //   else if (response.error) console.log('Error occured in onSubmit:', response.error);\n    //   else if (response.data?.login.errors) {\n    //     console.log(toErrorMap(response.data.login.errors));\n    //     const errorObj = toErrorMap(response.data.login.errors);\n    //     if ('usernameOrEmail' in errorObj) setError('usernameOrEmail', { message: errorObj.usernameOrEmail });\n    //     if ('password' in errorObj) setError('password', { message: errorObj.password });\n    //   }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Email</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"mt-4 mb-2\">\n            <label htmlFor=\"email\" className={styles.passwordLabel}>\n              email\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"email\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.email && <div className=\"text-sm font-bold text-red-500\">{errors.email.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-4\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}