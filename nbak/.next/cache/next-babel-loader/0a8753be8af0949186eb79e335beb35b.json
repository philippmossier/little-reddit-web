{"ast":null,"code":"var _jsxFileName = \"/home/phil/gh/lireddit/little-reddit-web/pages/register.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\n\nconst Register = ({}) => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    __jsx(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, __jsx(\"input\", {\n      name: \"example\",\n      defaultValue: \"test\",\n      ref: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }), __jsx(\"input\", {\n      name: \"exampleRequired\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), errors.exampleRequired && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }\n    }, \"This field is required\"), __jsx(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }))\n  );\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/phil/gh/lireddit/little-reddit-web/pages/register.tsx"],"names":["React","useForm","Register","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAMA,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AAC9C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CL,OAAO,EAAzD;;AACA,QAAMM,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EAJ8C,CAIf;;AAC3B;AACY;AAEV;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,YAAY,EAAC,MAAnC;AAA0C,MAAA,GAAG,EAAEJ,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEQ,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOGL,MAAM,CAACM,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAP7B,EASE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF;AAHF;AAeP,CApBD;;AAsBA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport { useForm } from \"react-hook-form\";\n\ninterface registerProps {\n\n}\n\nconst Register: React.FC<registerProps> = ({}) => {\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = data => console.log(data);\n\n    console.log(watch(\"example\")); // watch input value by passing the name of it\n        return (\n                    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n          {/* register your input into the hook by invoking the \"register\" function */}\n            <input name=\"example\" defaultValue=\"test\" ref={register} />\n            \n            {/* include validation with required or other standard HTML validation rules */}\n            <input name=\"exampleRequired\" ref={register({ required: true })} />\n            {/* errors will return when field validation fails  */}\n            {errors.exampleRequired && <span>This field is required</span>}\n            \n            <input type=\"submit\" />\n          </form>\n        );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}