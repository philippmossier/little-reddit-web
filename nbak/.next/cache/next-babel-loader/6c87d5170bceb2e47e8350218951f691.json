{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport React, { useState } from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\nimport createUrqlClient from '../../utils/createUrqlClient';\n\n// interface ChangePasswordProps {}\nconst ChangePassword = ({\n  token\n}) => {\n  const [, changePasswordMut] = useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const router = useRouter(); // token has no form field and no state, so we create a state for it:\n\n  const {\n    0: tokenError,\n    1: setTokenError\n  } = useState('');\n\n  const onSubmit = async data => {\n    var _response$data, _response$data2;\n\n    const response = await changePasswordMut(data); // const response = await changePasswordMut({\n    //   newPassword: data.newPassword,\n    //   token: data.token,\n    // });\n    // if no connection\n\n    if (!response) console.log('Promise unresolved, check connection');\n    if (response.error) console.log('Error occured in onSubmit:', response.error);\n\n    if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n      console.log(toErrorMap(response.data.changePassword.errors));\n      const errorObj = toErrorMap(response.data.changePassword.errors);\n      if ('newPassword' in errorObj) setError('newPassword', {\n        message: errorObj.changePassword\n      });\n      if ('token' in errorObj) setError('newPassword', {\n        message: errorObj.changePassword\n      });\n    } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n      console.log('Changed password succesfully as:', response.data.changePassword.user);\n      router.push('/');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    className: \"w-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Enter your new password\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"newPassword\",\n    className: styles.usernameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"New password\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"newPassword\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), errors.newPassword && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }\n  }, errors.newPassword.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Submit\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n}; // special function which gets all query params\n\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx"],"names":["withUrqlClient","React","useState","styles","toErrorMap","useChangePasswordMutation","useRouter","useForm","createUrqlClient","ChangePassword","token","changePasswordMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","tokenError","setTokenError","onSubmit","data","response","console","log","error","changePassword","errorObj","message","user","push","container","headerContainer","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","newPassword","submitButton","getInitialProps","query"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { NextPage } from 'next';\nimport React, { useState } from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\nimport createUrqlClient from '../../utils/createUrqlClient';\n\ntype FormValues = {\n  newPassword: string;\n  token: string;\n};\n\n// interface ChangePasswordProps {}\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const [, changePasswordMut] = useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n\n  // token has no form field and no state, so we create a state for it:\n  const [tokenError, setTokenError] = useState('');\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await changePasswordMut(data);\n    // const response = await changePasswordMut({\n    //   newPassword: data.newPassword,\n    //   token: data.token,\n    // });\n\n    // if no connection\n    if (!response) console.log('Promise unresolved, check connection');\n    if (response.error) console.log('Error occured in onSubmit:', response.error);\n    if (response.data?.changePassword.errors) {\n      console.log(toErrorMap(response.data.changePassword.errors));\n      const errorObj = toErrorMap(response.data.changePassword.errors);\n      if ('newPassword' in errorObj) setError('newPassword', { message: errorObj.changePassword });\n      if ('token' in errorObj) setError('newPassword', { message: errorObj.changePassword });\n    } else if (response.data?.changePassword.user) {\n      console.log('Changed password succesfully as:', response.data.changePassword.user);\n      router.push('/');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-12\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n        <h2 className={styles.headerTitle}>Enter your new password</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"newPassword\" className={styles.usernameLabel}>\n              New password\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input\n                name=\"newPassword\"\n                type=\"password\"\n                ref={register({ required: true })}\n                className={styles.usernameInputField}\n              />\n              {errors.newPassword && <div className=\"text-red-500 font-bold text-sm\">{errors.newPassword.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n// special function which gets all query params\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}