{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as styles from '../../page-styles/styles';\n// import { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\n\n// interface ChangePasswordProps {}\nconst ChangePassword = ({\n  token\n}) => {\n  // const [, changePasswordMut] =  useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const router = useRouter();\n\n  const onSubmit = async data => {// const response = await changePasswordMut(data);\n    // if no connection\n    // if (!response) console.log('Promise unresolved, check connection');\n    // if (response.error) console.log('Error occured in onSubmit:', response.error);\n    // if (response.data?.login.errors) {\n    //   console.log(toErrorMap(response.data.login.errors));\n    //   const errorObj = toErrorMap(response.data.login.errors);\n    //   if ('changePassword' in errorObj) setError('changePassword', { message: errorObj.changePassword });\n    // } else if (response.data?.login.user) {\n    //   console.log('Login succesfully as:', response.data.login.user);\n    //   router.push('/');\n    // }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    className: \"w-12 py-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Enter your new password\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"newPassword\",\n    className: styles.usernameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"New password\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"newPassword\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), errors.changePassword && __jsx(\"div\", {\n    className: \"text-red-500 font-bold text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, errors.changePassword.message))), __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Submit\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n}; // special function which gets all query params\n\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx"],"names":["React","styles","useRouter","useForm","ChangePassword","token","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","container","headerContainer","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","changePassword","message","submitButton","getInitialProps","query"],"mappings":"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","sourcesContent":["import { NextPage } from 'next';\nimport React from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\n// import { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\n\ntype FormValues = {\n  changePassword: string;\n};\n\n// interface ChangePasswordProps {}\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  // const [, changePasswordMut] =  useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n\n  const onSubmit = async (data: FormValues) => {\n    // const response = await changePasswordMut(data);\n    // if no connection\n    // if (!response) console.log('Promise unresolved, check connection');\n    // if (response.error) console.log('Error occured in onSubmit:', response.error);\n    // if (response.data?.login.errors) {\n    //   console.log(toErrorMap(response.data.login.errors));\n    //   const errorObj = toErrorMap(response.data.login.errors);\n    //   if ('changePassword' in errorObj) setError('changePassword', { message: errorObj.changePassword });\n    // } else if (response.data?.login.user) {\n    //   console.log('Login succesfully as:', response.data.login.user);\n    //   router.push('/');\n    // }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-12 py-11\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n        <h2 className={styles.headerTitle}>Enter your new password</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"newPassword\" className={styles.usernameLabel}>\n              New password\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input\n                name=\"newPassword\"\n                type=\"password\"\n                ref={register({ required: true })}\n                className={styles.usernameInputField}\n              />\n              {errors.changePassword && (\n                <div className=\"text-red-500 font-bold text-sm\">{errors.changePassword.message}</div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n// special function which gets all query params\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}