{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/components/Navbar/Navbar.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\nimport { isServer } from '../../utils/isServer';\nimport { useRouter } from 'next/router';\n\nconst NavBar = ({}) => {\n  React.useEffect(() => {\n    console.log('Component was mounted.');\n  }, []);\n  const [{\n    fetching: logoutFetching\n  }, logout] = useLogoutMutation();\n  const [{\n    data,\n    fetching\n  }] = useMeQuery({\n    // only load query in browser (because cookie only works in browser and so we dont waste a request which we dont need)\n    // Note: This gives browser Warning: Did not expect server HTML to contain...\n    pause: isServer()\n  });\n  const router = useRouter();\n  console.log(data);\n  let body; // data is loading\n\n  if (fetching) {\n    body = null; // user not logged in\n  } else {\n    var _data$me;\n\n    body = __jsx(React.Fragment, null, __jsx(\"a\", {\n      className: \"mx-2 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, data === null || data === void 0 ? void 0 : (_data$me = data.me) === null || _data$me === void 0 ? void 0 : _data$me.username), __jsx(\"button\", {\n      onClick: async () => {\n        await logout();\n        router.reload();\n      },\n      disabled: logoutFetching,\n      className: \"mx-2 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  }\n\n  return __jsx(\"nav\", {\n    className: \"bg-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex items-center h-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"ml-auto mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, body)));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/components/Navbar/Navbar.tsx"],"names":["React","useLogoutMutation","useMeQuery","isServer","useRouter","NavBar","useEffect","console","log","fetching","logoutFetching","logout","data","pause","router","body","me","username","reload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,yBAA9C;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AAIA,MAAMC,MAA6B,GAAG,CAAC,EAAD,KAAQ;AAC5CL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,GAFD,EAEG,EAFH;AAGA,QAAM,CAAC;AAAEC,IAAAA,QAAQ,EAAEC;AAAZ,GAAD,EAA+BC,MAA/B,IAAyCV,iBAAiB,EAAhE;AACA,QAAM,CAAC;AAAEW,IAAAA,IAAF;AAAQH,IAAAA;AAAR,GAAD,IAAuBP,UAAU,CAAC;AACtC;AACA;AACAW,IAAAA,KAAK,EAAEV,QAAQ;AAHuB,GAAD,CAAvC;AAKA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,MAAIG,IAAJ,CAb4C,CAc5C;;AACA,MAAIN,QAAJ,EAAc;AACZM,IAAAA,IAAI,GAAG,IAAP,CADY,CAEZ;AACD,GAHD,MAGO;AAAA;;AACLA,IAAAA,IAAI,GACF,4BACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,IAAhC,aAAgCA,IAAhC,mCAAgCA,IAAI,CAAEI,EAAtC,6CAAgC,SAAUC,QAA1C,CADF,EAEE;AACE,MAAA,OAAO,EAAE,YAAY;AACnB,cAAMN,MAAM,EAAZ;AACAG,QAAAA,MAAM,CAACI,MAAP;AACD,OAJH;AAKE,MAAA,QAAQ,EAAER,cALZ;AAME,MAAA,SAAS,EAAC,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAeD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BK,IAA/B,CADF,CADF,CADF;AAOD,CA3CD;;AA6CA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport NextLink from 'next/link';\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\nimport { isServer } from '../../utils/isServer';\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/router';\n\ntype NavBarProps = unknown;\n\nconst NavBar: React.FC<NavBarProps> = ({}) => {\n  React.useEffect(() => {\n    console.log('Component was mounted.');\n  }, []);\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({\n    // only load query in browser (because cookie only works in browser and so we dont waste a request which we dont need)\n    // Note: This gives browser Warning: Did not expect server HTML to contain...\n    pause: isServer(),\n  });\n  const router = useRouter();\n\n  console.log(data);\n  let body;\n  // data is loading\n  if (fetching) {\n    body = null;\n    // user not logged in\n  } else {\n    body = (\n      <>\n        <a className=\"mx-2 text-white\">{data?.me?.username}</a>\n        <button\n          onClick={async () => {\n            await logout();\n            router.reload();\n          }}\n          disabled={logoutFetching}\n          className=\"mx-2 text-white\"\n        >\n          Logout\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <nav className=\"bg-gray-800\">\n      <div className=\"flex items-center h-16\">\n        <div className=\"ml-auto mr-2\">{body}</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}