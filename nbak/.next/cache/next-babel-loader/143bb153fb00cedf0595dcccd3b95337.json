{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/forgot-password.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as styles from '../page-styles/styles';\n\nconst ForgotPassword = ({}) => {\n  //   const [, loginMut] = useLoginMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  //   const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  //   const { isSubmitting } = formState;\n  //   const router = useRouter();\n  //   const onSubmit = async (data: FormValues) => {\n  //     console.log('a');\n  //     //   const response = await loginMut(data);\n  //     //   // success:\n  //     //   if (response.data?.login.user) {\n  //     //     console.log('Login succesfully as:', response.data.login.user);\n  //     //     router.push('/');\n  //     //   }\n  //     //   // if no connection:\n  //     //   else if (!response) console.log('Promise unresolved, check connection');\n  //     //   // error handling:\n  //     //   else if (response.error) console.log('Error occured in onSubmit:', response.error);\n  //     //   else if (response.data?.login.errors) {\n  //     //     console.log(toErrorMap(response.data.login.errors));\n  //     //     const errorObj = toErrorMap(response.data.login.errors);\n  //     //     if ('usernameOrEmail' in errorObj) setError('usernameOrEmail', { message: errorObj.usernameOrEmail });\n  //     //     if ('password' in errorObj) setError('password', { message: errorObj.password });\n  //     //   }\n  //   };\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: styles.headerLogo,\n    src: \"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\",\n    alt: \"Workflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Email\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-4 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.passwordLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"email\"), __jsx(\"div\", {\n    className: styles.passwordInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    className: styles.passwordInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), errors.email && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 32\n    }\n  }, errors.email.message))), __jsx(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"forgot password\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"forgot password\")))));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/forgot-password.tsx"],"names":["React","styles","ForgotPassword","container","headerContainer","headerLogo","headerTitle","formContainer","handleSubmit","onSubmit","passwordLabel","passwordInputContainer","register","required","passwordInputField","errors","email","message","isSubmitting","submitButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;;AAMA,MAAMC,cAA4B,GAAG,CAAC,EAAD,KAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACG,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEH,MAAM,CAACI,UADpB;AAEE,IAAA,GAAG,EAAC,6DAFN;AAGE,IAAA,GAAG,EAAC,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAI,IAAA,SAAS,EAAEJ,MAAM,CAACK,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF,EAUE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEC,YAAY,CAACC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAER,MAAM,CAACS,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAEC,QAAQ,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAjC;AAAuD,IAAA,SAAS,EAAEZ,MAAM,CAACa,kBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGC,MAAM,CAACC,KAAP,IAAgB;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDD,MAAM,CAACC,KAAP,CAAaC,OAA9D,CAFnB,CAJF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,YAAY,GACX;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,YAAhC;AAA8C,IAAA,SAAS,EAAEjB,MAAM,CAACkB,YAAP,CAAoBD,YAApB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADW,GAKX;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEjB,MAAM,CAACkB,YAAP,CAAoBD,YAApB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CAXF,CADF,CAVF,CADF;AAsCD,CA/DD;;AAiEA,eAAehB,cAAf","sourcesContent":["import React from 'react';\nimport * as styles from '../page-styles/styles';\n\ntype FormValues = {\n  email: string;\n};\n\nconst ForgotPassword: React.FC<{}> = ({}) => {\n  //   const [, loginMut] = useLoginMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  //   const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  //   const { isSubmitting } = formState;\n  //   const router = useRouter();\n  //   const onSubmit = async (data: FormValues) => {\n  //     console.log('a');\n  //     //   const response = await loginMut(data);\n  //     //   // success:\n  //     //   if (response.data?.login.user) {\n  //     //     console.log('Login succesfully as:', response.data.login.user);\n  //     //     router.push('/');\n  //     //   }\n  //     //   // if no connection:\n  //     //   else if (!response) console.log('Promise unresolved, check connection');\n  //     //   // error handling:\n  //     //   else if (response.error) console.log('Error occured in onSubmit:', response.error);\n  //     //   else if (response.data?.login.errors) {\n  //     //     console.log(toErrorMap(response.data.login.errors));\n  //     //     const errorObj = toErrorMap(response.data.login.errors);\n  //     //     if ('usernameOrEmail' in errorObj) setError('usernameOrEmail', { message: errorObj.usernameOrEmail });\n  //     //     if ('password' in errorObj) setError('password', { message: errorObj.password });\n  //     //   }\n  //   };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <img\n          className={styles.headerLogo}\n          src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\n          alt=\"Workflow\"\n        />\n        <h2 className={styles.headerTitle}>Email</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"mt-4 mb-2\">\n            <label htmlFor=\"email\" className={styles.passwordLabel}>\n              email\n            </label>\n            <div className={styles.passwordInputContainer}>\n              <input name=\"email\" ref={register({ required: true })} className={styles.passwordInputField} />\n              {errors.email && <div className=\"text-sm font-bold text-red-500\">{errors.email.message}</div>}\n            </div>\n          </div>\n\n          <div className=\"mt-4\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                forgot password\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}