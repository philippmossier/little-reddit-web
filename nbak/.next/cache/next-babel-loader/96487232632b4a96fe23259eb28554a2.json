{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/pages/forgot-password.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport createUrqlClient from '../utils/createUrqlClient';\n\nvar ForgotPasswordPage = function ForgotPasswordPage(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useForgotPasswordMut = useForgotPasswordMutation(),\n      _useForgotPasswordMut2 = _slicedToArray(_useForgotPasswordMut, 2),\n      forgotPasswordMut = _useForgotPasswordMut2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var isSubmitting = formState.isSubmitting;\n  var router = useRouter();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _response$data;\n\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return forgotPasswordMut(data);\n\n            case 2:\n              response = _context.sent;\n\n              if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.forgotPassword) {\n                setComplete(true);\n                console.log('Email sent sucessfull:', response.data);\n              } // if no connection\n              else if (!response) console.log('Promise unresolved, check connection'); // error handling:\n                else if (response.error) {\n                    setError('email', {\n                      message: 'sending email failed, pls check spelling'\n                    });\n                  }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"flex items-center content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"ab\"));\n};\n\n_s(ForgotPasswordPage, \"O5AmFt31+YU3nt+CUgB8J2pGSmg=\", false, function () {\n  return [useForgotPasswordMutation, useForm, useRouter];\n});\n\n_c = ForgotPasswordPage;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: false\n})(ForgotPasswordPage);\n{\n  /* <div className=\"flex items-center min-h-screen bg-gray-200\">\n      <div className=\"h-1/2 w-1/2 mx-12 bg-white shadow\">\n        <div className=\"sm:p-6 px-4 py-5\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Continuous Integration</h3>\n          <div className=\"max-w-xl mt-2 text-sm text-gray-500\">\n            <p>If an account with that email exists, we sent you an email to reset your password.</p>\n          </div>\n          <NextLink href=\"/\">\n            <div className=\"mt-3 text-sm\">\n              <a href=\"#\" className=\"hover:text-indigo-500 font-medium text-indigo-600\">\n                {' '}\n                Go back to Home <span aria-hidden=\"true\">&rarr;</span>\n              </a>\n            </div>\n          </NextLink>\n        </div>\n      </div>\n    </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/littlereddit/little-reddit-web/src/pages/forgot-password.tsx"],"names":["withUrqlClient","useRouter","React","useState","useForm","useForgotPasswordMutation","createUrqlClient","ForgotPasswordPage","complete","setComplete","forgotPasswordMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","onSubmit","data","response","forgotPassword","console","log","error","message","ssr"],"mappings":";;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AAEA,OAAOC,gBAAP,MAA6B,2BAA7B;;AAGA,IAAMC,kBAAiC,GAAG,SAApCA,kBAAoC,OAAQ;AAAA;;AAAA;;AAAA,kBAChBJ,QAAQ,CAAC,KAAD,CADQ;AAAA,MACzCK,QADyC;AAAA,MAC/BC,WAD+B;;AAAA,8BAElBJ,yBAAyB,EAFP;AAAA;AAAA,MAEvCK,iBAFuC;;AAAA,iBAGgBN,OAAO,EAHvB;AAAA,MAGxCO,QAHwC,YAGxCA,QAHwC;AAAA,MAG9BC,YAH8B,YAG9BA,YAH8B;AAAA,MAGhBC,SAHgB,YAGhBA,SAHgB;AAAA,MAGLC,QAHK,YAGLA,QAHK;AAAA,MAGKC,MAHL,YAGKA,MAHL;;AAAA,MAIxCC,YAJwC,GAIvBH,SAJuB,CAIxCG,YAJwC;AAKhD,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;;AACA,MAAMiB,QAAQ;AAAA,yEAAG,iBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQT,iBAAiB,CAACS,IAAD,CADzB;;AAAA;AACTC,cAAAA,QADS;;AAEf,oCAAIA,QAAQ,CAACD,IAAb,mDAAI,eAAeE,cAAnB,EAAmC;AACjCZ,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACAa,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,QAAQ,CAACD,IAA/C;AACD,eAHD,CAIA;AAJA,mBAKK,IAAI,CAACC,QAAL,EAAeE,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAf,CACL;AADK,qBAEA,IAAIH,QAAQ,CAACI,KAAb,EAAoB;AACvBV,oBAAAA,QAAQ,CAAC,OAAD,EAAU;AAAEW,sBAAAA,OAAO,EAAE;AAAX,qBAAV,CAAR;AACD;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARP,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,CAzBD;;GAAMX,kB;UAE0BF,yB,EACkCD,O,EAEjDH,S;;;KALXM,kB;AA2BN,eAAeP,cAAc,CAACM,gBAAD,EAAmB;AAAEoB,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAiDnB,kBAAjD,CAAf;AACA;AACE;;;;;;;;;;;;;;;;;;AAkBD","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/dist/client/router';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useForgotPasswordMutation } from '../generated/graphql';\nimport * as styles from '../page-styles/styles';\nimport createUrqlClient from '../utils/createUrqlClient';\nimport NextLink from 'next/link';\n\nconst ForgotPasswordPage: React.FC<any> = ({}) => {\n  const [complete, setComplete] = useState(false);\n  const [, forgotPasswordMut] = useForgotPasswordMutation();\n  const { register, handleSubmit, formState, setError, errors } = useForm<any>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n  const onSubmit = async (data) => {\n    const response = await forgotPasswordMut(data);\n    if (response.data?.forgotPassword) {\n      setComplete(true);\n      console.log('Email sent sucessfull:', response.data);\n    }\n    // if no connection\n    else if (!response) console.log('Promise unresolved, check connection');\n    // error handling:\n    else if (response.error) {\n      setError('email', { message: 'sending email failed, pls check spelling' });\n    }\n  };\n\n  return (\n    <div className=\"flex items-center content-center\">\n      <div>ab</div>\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: false })(ForgotPasswordPage);\n{\n  /* <div className=\"flex items-center min-h-screen bg-gray-200\">\n      <div className=\"h-1/2 w-1/2 mx-12 bg-white shadow\">\n        <div className=\"sm:p-6 px-4 py-5\">\n          <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Continuous Integration</h3>\n          <div className=\"max-w-xl mt-2 text-sm text-gray-500\">\n            <p>If an account with that email exists, we sent you an email to reset your password.</p>\n          </div>\n          <NextLink href=\"/\">\n            <div className=\"mt-3 text-sm\">\n              <a href=\"#\" className=\"hover:text-indigo-500 font-medium text-indigo-600\">\n                {' '}\n                Go back to Home <span aria-hidden=\"true\">&rarr;</span>\n              </a>\n            </div>\n          </NextLink>\n        </div>\n      </div>\n    </div> */\n}\n"]},"metadata":{},"sourceType":"module"}