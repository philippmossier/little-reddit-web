{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/phil/gh/lireddit/little-reddit-web/src/components/NavBar/NavBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport NextLink from 'next/link';\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\nimport { isServer } from '../../utils/isServer';\n\nvar NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    // only load query in browser (because cookie only works in browser and so we dont waste a request which we dont need)\n    // Note: This gives browser Warning: Did not expect server HTML to contain...\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body; // data is loading\n\n  if (fetching) {\n    body = null; // user not logged in\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(NextLink, {\n      href: \"/login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"mx-2 text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Login\")), __jsx(NextLink, {\n      href: \"/register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"mx-2 text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Register\"))); // user is logged in\n  } else {\n    body = __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      className: \"mx-2 text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, data.me.username), __jsx(\"button\", {\n      onClick: function onClick() {\n        logout();\n      },\n      disabled: logoutFetching,\n      className: \"mx-2 text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  }\n\n  return __jsx(\"nav\", {\n    className: \"bg-cool-gray-800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex h-16 items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"ml-auto mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, body)));\n};\n\n_s(NavBar, \"bu7Mo57UkJD6Z7YYu+ueXRjOJFY=\", false, function () {\n  return [useLogoutMutation, useMeQuery];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/phil/gh/lireddit/little-reddit-web/src/components/NavBar/NavBar.tsx"],"names":["React","NextLink","useLogoutMutation","useMeQuery","isServer","NavBar","logoutFetching","fetching","logout","pause","data","body","me","username"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,yBAA9C;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAIA,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAAA,2BACGH,iBAAiB,EADpB;AAAA;AAAA,MACzBI,cADyB,0BACnCC,QADmC;AAAA,MACPC,MADO;;AAAA,oBAEfL,UAAU,CAAC;AACtC;AACA;AACAM,IAAAA,KAAK,EAAEL,QAAQ;AAHuB,GAAD,CAFK;AAAA;AAAA;AAAA,MAEnCM,IAFmC,iBAEnCA,IAFmC;AAAA,MAE7BH,QAF6B,iBAE7BA,QAF6B;;AAQ5C,MAAII,IAAJ,CAR4C,CAS5C;;AACA,MAAIJ,QAAJ,EAAc;AACZI,IAAAA,IAAI,GAAG,IAAP,CADY,CAEZ;AACD,GAHD,MAGO,IAAI,EAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,EAAP,CAAJ,EAAe;AACpBD,IAAAA,IAAI,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,QAAD;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJF,CADF,CADoB,CAWpB;AACD,GAZM,MAYA;AACLA,IAAAA,IAAI,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,IAAI,CAACE,EAAL,CAAQC,QAAxC,CADF,EAEE;AACE,MAAA,OAAO,EAAE,mBAAM;AACbL,QAAAA,MAAM;AACP,OAHH;AAIE,MAAA,QAAQ,EAAEF,cAJZ;AAKE,MAAA,SAAS,EAAC,iBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAcD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BK,IAA/B,CADF,CADF,CADF;AAOD,CAjDD;;GAAMN,M;UAC2CH,iB,EAClBC,U;;;KAFzBE,M;AAmDN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport NextLink from 'next/link';\nimport { useLogoutMutation, useMeQuery } from '../../generated/graphql';\nimport { isServer } from '../../utils/isServer';\n\ntype NavBarProps = unknown;\n\nconst NavBar: React.FC<NavBarProps> = ({}) => {\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({\n    // only load query in browser (because cookie only works in browser and so we dont waste a request which we dont need)\n    // Note: This gives browser Warning: Did not expect server HTML to contain...\n    pause: isServer(),\n  });\n\n  let body;\n  // data is loading\n  if (fetching) {\n    body = null;\n    // user not logged in\n  } else if (!data?.me) {\n    body = (\n      <div>\n        <NextLink href=\"/login\">\n          <a className=\"mx-2 text-white\">Login</a>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <a className=\"mx-2 text-white\">Register</a>\n        </NextLink>\n      </div>\n    );\n    // user is logged in\n  } else {\n    body = (\n      <div>\n        <a className=\"mx-2 text-white\">{data.me.username}</a>\n        <button\n          onClick={() => {\n            logout();\n          }}\n          disabled={logoutFetching}\n          className=\"mx-2 text-white\"\n        >\n          Logout\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <nav className=\"bg-cool-gray-800\">\n      <div className=\"flex h-16 items-center\">\n        <div className=\"ml-auto mr-2\">{body}</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}