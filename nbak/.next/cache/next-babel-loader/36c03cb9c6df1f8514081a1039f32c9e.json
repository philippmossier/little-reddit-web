{"ast":null,"code":"var _jsxFileName = \"/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport React, { useState } from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\nimport createUrqlClient from '../../utils/createUrqlClient';\nimport NextLink from 'next/link';\nimport AlertSvg from '../../assets/svg/AlertSvg';\n\nconst ChangePassword = ({\n  token\n}) => {\n  const [, changePasswordMut] = useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setError,\n    errors\n  } = useForm();\n  const {\n    isSubmitting\n  } = formState;\n  const router = useRouter(); // token has no form field and no state, so we create a state for it:\n\n  const {\n    0: tokenError,\n    1: setTokenError\n  } = useState('');\n\n  const onSubmit = async data => {\n    var _response$data, _response$data2;\n\n    const response = await changePasswordMut({\n      newPassword: data.newPassword,\n      token\n    }); // success:\n\n    if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.user) {\n      console.log('Changed password succesfully as:', response.data.changePassword.user);\n      router.push('/');\n    } // no connection:\n    else if (!response) console.log('Promise unresolved, check connection'); // error handling:\n      else if (response.error) console.log('Error occured in onSubmit:', response.error);else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.errors) {\n          console.log(toErrorMap(response.data.changePassword.errors));\n          const errorObj = toErrorMap(response.data.changePassword.errors);\n          if ('newPassword' in errorObj) setError('newPassword', {\n            message: errorObj.newPassword\n          }); // as token is not a formfield wie have to use our tokenError hook here\n          // to set the error manually and render its message in a custom alert-box\n\n          if ('token' in errorObj) setTokenError(errorObj.token);\n        }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: styles.headerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Enter your new password\")), __jsx(\"div\", {\n    className: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"newPassword\",\n    className: styles.usernameLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"New password\"), __jsx(\"div\", {\n    className: styles.usernameInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    name: \"newPassword\",\n    type: \"password\",\n    ref: register({\n      required: true\n    }),\n    className: styles.usernameInputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), errors.newPassword && __jsx(\"div\", {\n    className: \"text-sm font-bold text-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 38\n    }\n  }, errors.newPassword.message))), tokenError ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"flex w-full my-4 mb-4 bg-red-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-red w-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, __jsx(AlertSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    className: \"items-center w-full p-4 text-black bg-red-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"pb-4 text-lg font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Heads Up!\"), __jsx(\"p\", {\n    className: \"leading-tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, tokenError))), __jsx(NextLink, {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"hover:text-black hover:border-black text-lg tracking-tighter text-gray-600 border-b border-gray-400 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Get a new one here\"))) : null, __jsx(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, isSubmitting ? __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Submit\") : __jsx(\"button\", {\n    type: \"submit\",\n    className: styles.submitButton(isSubmitting),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n}; // special function which gets all query params\n\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default withUrqlClient(createUrqlClient)(ChangePassword);","map":{"version":3,"sources":["/home/phil/code/gh/fullstack/lireddit/little-reddit-web/src/pages/change-password/[token].tsx"],"names":["withUrqlClient","React","useState","styles","toErrorMap","useChangePasswordMutation","useRouter","useForm","createUrqlClient","NextLink","AlertSvg","ChangePassword","token","changePasswordMut","register","handleSubmit","formState","setError","errors","isSubmitting","router","tokenError","setTokenError","onSubmit","data","response","newPassword","changePassword","user","console","log","push","error","errorObj","message","container","headerContainer","headerTitle","formContainer","usernameLabel","usernameInputContainer","required","usernameInputField","submitButton","getInitialProps","query"],"mappings":"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","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { NextPage } from 'next';\nimport React, { useState } from 'react';\nimport * as styles from '../../page-styles/styles';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/dist/client/router';\nimport { useForm } from 'react-hook-form';\nimport createUrqlClient from '../../utils/createUrqlClient';\nimport NextLink from 'next/link';\nimport AlertSvg from '../../assets/svg/AlertSvg';\n\ntype FormValues = {\n  newPassword: string;\n  token: string;\n};\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  const [, changePasswordMut] = useChangePasswordMutation(); // mutation hook from '@graphql-codegen/typescript-urql'\n  const { register, handleSubmit, formState, setError, errors } = useForm<FormValues>();\n  const { isSubmitting } = formState;\n  const router = useRouter();\n  // token has no form field and no state, so we create a state for it:\n  const [tokenError, setTokenError] = useState('');\n\n  const onSubmit = async (data: FormValues) => {\n    const response = await changePasswordMut({\n      newPassword: data.newPassword,\n      token,\n    });\n    // success:\n    if (response.data?.changePassword.user) {\n      console.log('Changed password succesfully as:', response.data.changePassword.user);\n      router.push('/');\n    }\n    // no connection:\n    else if (!response) console.log('Promise unresolved, check connection');\n    // error handling:\n    else if (response.error) console.log('Error occured in onSubmit:', response.error);\n    else if (response.data?.changePassword.errors) {\n      console.log(toErrorMap(response.data.changePassword.errors));\n      const errorObj = toErrorMap(response.data.changePassword.errors);\n      if ('newPassword' in errorObj) setError('newPassword', { message: errorObj.newPassword });\n      // as token is not a formfield wie have to use our tokenError hook here\n      // to set the error manually and render its message in a custom alert-box\n      if ('token' in errorObj) setTokenError(errorObj.token);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <h2 className={styles.headerTitle}>Enter your new password</h2>\n      </div>\n\n      <div className={styles.formContainer}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label htmlFor=\"newPassword\" className={styles.usernameLabel}>\n              New password\n            </label>\n            <div className={styles.usernameInputContainer}>\n              <input\n                name=\"newPassword\"\n                type=\"password\"\n                ref={register({ required: true })}\n                className={styles.usernameInputField}\n              />\n              {errors.newPassword && <div className=\"text-sm font-bold text-red-500\">{errors.newPassword.message}</div>}\n            </div>\n          </div>\n          {tokenError ? (\n            <div>\n              <div className=\"flex w-full my-4 mb-4 bg-red-500\">\n                <div className=\"bg-red w-16\">\n                  <div className=\"p-4\">\n                    <AlertSvg />\n                  </div>\n                </div>\n                <div className=\"items-center w-full p-4 text-black bg-red-300\">\n                  <span className=\"pb-4 text-lg font-bold\">Heads Up!</span>\n                  <p className=\"leading-tight\">{tokenError}</p>\n                </div>\n              </div>\n\n              <NextLink href=\"/forgot-password\">\n                <span className=\"hover:text-black hover:border-black text-lg tracking-tighter text-gray-600 border-b border-gray-400 cursor-pointer\">\n                  Get a new one here\n                </span>\n              </NextLink>\n            </div>\n          ) : null}\n\n          <div className=\"mt-6\">\n            {isSubmitting ? (\n              <button type=\"submit\" disabled={isSubmitting} className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            ) : (\n              <button type=\"submit\" className={styles.submitButton(isSubmitting)}>\n                Submit\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n// special function which gets all query params\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\nexport default withUrqlClient(createUrqlClient)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}